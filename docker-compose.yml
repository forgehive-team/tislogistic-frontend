version: '3.7'

services:
  app:
    build:
      context: ./tis-legacy
    container_name: legacy_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: legacy_app
      SERVICE_TAGS: dev
    working_dir: /srv
    depends_on:
      - db
      - npm
    volumes:
      - ./tis-legacy:/srv:rw
      - ./tis-legacy/.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini

  npm:
    image: node:14.15.5
    container_name: legacy_npm
    tty: true
    working_dir: /srv

  db:
    image: mysql:5.7
    platform: linux/x86_64
    container_name: legacy_db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: default
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    expose:
      - "3306"

  frontend:
    build: .
    container_name: frontend
    restart: always
    ports:
      - '3000:3000'

  proxy:
    container_name: proxy
    image: nginx:alpine
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: always
    depends_on:
      - frontend
      - app
    volumes:
      - ./tis-legacy:/srv:rw
      - ./proxy/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/nginx/backend.conf:/etc/nginx/conf.d/backend.conf
      - ./proxy/nginx/frontend.conf:/etc/nginx/conf.d/frontend.conf
#      - ./proxy/docker/certbot/conf:/etc/letsencrypt
#      - ./proxy/docker/certbot/www:/srv/certbot
    ports:
      - "80:80"
#      - "443:443"

volumes:
  dbdata:
    driver: local