version: '3.7'

services:
  app:
    build:
      context: ./tis-legacy
    container_name: legacy_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: legacy_app
      SERVICE_TAGS: dev
    working_dir: /srv
    depends_on:
      - db
      - npm
    volumes:
      - ./tis-legacy:/srv:rw
      - ./tis-legacy/.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini

  npm:
    image: node:14.15.5
    container_name: legacy_npm
    tty: true
    working_dir: /srv
    volumes:
      - ./tis-legacy:/srv:rw

  db:
    image: mysql:5.7
    platform: linux/x86_64
    container_name: legacy_db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: tis_web
      MYSQL_USER: tis_owner
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    expose:
      - "3306"

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: default
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./tislogistic-backend
    container_name: backend
    restart: unless-stopped
    tty: true
    working_dir: /app
    depends_on:
      - postgres
    volumes:
      - ./tislogistic-backend:/app:rw
      - ./tislogistic-backend/docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini

  english:
    build:
      context: ./english
      dockerfile: english.Dockerfile
    container_name: english
    restart: always
    ports:
      - '3001:3000'

  frontend:
    build: .
    container_name: frontend
    restart: always
    ports:
      - '3000:3000'

  proxy:
    container_name: proxy
    image: nginx:alpine
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: always
    depends_on:
      - frontend
      - english
      - app
      - backend
    volumes:
      - ./tis-legacy:/srv:rw
      - ./tislogistic-backend:/app:rw
      - ./proxy/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/nginx/english.conf:/etc/nginx/conf.d/english.conf
      - ./proxy/nginx/dashboard.conf:/etc/nginx/conf.d/dashboard.conf
      - ./proxy/nginx/backend.conf:/etc/nginx/conf.d/backend.conf
      - ./proxy/nginx/msk.conf:/etc/nginx/conf.d/msk.conf
      - ./proxy/nginx/frontend.conf:/etc/nginx/conf.d/frontend.conf
      - ./proxy/certbot/conf:/etc/letsencrypt
      - ./proxy/certbot/www:/srv/certbot
    ports:
      - "80:80"
      - "443:443"

  certbot:
    container_name: certbot
    restart: always
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./proxy/certbot/conf:/etc/letsencrypt
      - ./proxy/certbot/www:/srv/certbot

volumes:
  dbdata:
    driver: local