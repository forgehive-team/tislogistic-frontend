{"version":3,"file":"ReturnCallForm-c80b6bba.js","sources":["../../../../components/Icons/ClosePopup.vue","../../../../components/Shared/ReturnCallForm.vue"],"sourcesContent":["<template>\n    <svg\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 48 48\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z\"\n            stroke-width=\"1.5\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n        />\n        <path\n            d=\"M30 18L18 30\"\n            stroke-width=\"1.5\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n        />\n        <path\n            d=\"M18 18L30 30\"\n            stroke-width=\"1.5\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n        />\n    </svg>\n</template>\n","<template>\r\n    <div class=\"return-call\">\r\n        <button\r\n            v-if=\"modal\"\r\n            class=\"return-call__close\"\r\n            @click=\"returnCallShown = false\"\r\n        >\r\n            <IconsClosePopup :alt=\"$texts.close\" />\r\n        </button>\r\n        <h3>{{ title }}</h3>\r\n        <h5>{{ $texts.willCall }}</h5>\r\n\r\n        <div class=\"return-call__fields\">\r\n            <div class=\"return-call__field\">\r\n                <div\r\n                    class=\"return-call__input\"\r\n                    :class=\"{ gray: !formData.service_id }\"\r\n                    @click=\"serviceOptionsShown = !serviceOptionsShown\"\r\n                >\r\n                    {{ serviceChosen }}\r\n                    <img\r\n                        src=\"@/assets/icons/expand.svg\"\r\n                        :class=\"{ rotated: serviceOptionsShown }\"\r\n                        alt=\"\"\r\n                    />\r\n                    <ul\r\n                        class=\"return-call__options\"\r\n                        :class=\"{ options_shown: serviceOptionsShown }\"\r\n                    >\r\n                        <li\r\n                            v-for=\"(serviceID, key) in servicesIDs\"\r\n                            :key=\"key\"\r\n                            @click=\"updateField(serviceID, 'service_id')\"\r\n                        >\r\n                            {{ services[serviceID] }}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"return-call__error\">\r\n                    {{ invalidInputMessages.service_id }}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"return-call__field\">\r\n                <div\r\n                    class=\"return-call__input\"\r\n                    :class=\"{ gray: !formData.city_id }\"\r\n                    @click=\"branchOptionsShown = !branchOptionsShown\"\r\n                >\r\n                    {{ cityChosen }}\r\n                    <img\r\n                        src=\"@/assets/icons/expand.svg\"\r\n                        :class=\"{ rotated: branchOptionsShown }\"\r\n                        alt=\"\"\r\n                    />\r\n                    <ul\r\n                        :class=\"{ options_shown: branchOptionsShown }\"\r\n                        class=\"return-call__options branch_options\"\r\n                    >\r\n                        <li\r\n                            v-for=\"(cityID, key) in citiesIDs\"\r\n                            :key=\"key\"\r\n                            @click=\"updateField(cityID, 'city_id')\"\r\n                        >\r\n                            {{ cities[cityID] }}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"return-call__error\">\r\n                    {{ invalidInputMessages.city_id }}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"return-call__field\">\r\n                <input\r\n                    class=\"return-call__input\"\r\n                    :placeholder=\"$texts.name\"\r\n                    :value=\"formData.full_name\"\r\n                    @input=\"updateField($event.target.value, 'full_name')\"\r\n                />\r\n                <div class=\"return-call__error\">\r\n                    {{ invalidInputMessages.full_name }}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"return-call__field\">\r\n                <input\r\n                    v-maska\r\n                    class=\"return-call__input\"\r\n                    :placeholder=\"$texts.phoneNumber\"\r\n                    data-maska=\"+7 ### ###-##-##\"\r\n                    data-maska-eager\r\n                    :value=\"formData.phone\"\r\n                    @input=\"updateField($event.target.value, 'phone')\"\r\n                />\r\n                <div class=\"return-call__error\">\r\n                    {{ invalidInputMessages.phone }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"return-call__bottom\">\r\n            <button class=\"return-call__send animate-red\" @click=\"handleSubmit\">\r\n                {{ sumbitBtnText }}\r\n            </button>\r\n            <p>\r\n                Нажимая кнопку, Вы принимаете условия\r\n                <br class=\"tablet-only\" />\r\n                <NuxtLink to=\"/eula\" target=\"_blank\"\r\n                    >пользовательского <br class=\"desktop-only\" />\r\n                    соглашения\r\n                </NuxtLink>\r\n                и\r\n                <NuxtLink to=\"/politika-konfidencialnosti\" target=\"_blank\"\r\n                    >политики конфиденциальности</NuxtLink\r\n                >\r\n            </p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { vMaska } from 'maska';\r\nimport validate from '~~/helpers/validate';\r\n\r\nexport default {\r\n    directives: { maska: vMaska },\r\n    props: {\r\n        title: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        modal: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        rentalContainers: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        sumbitBtnText: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    setup() {\r\n        const returnCallShown = useReturnCallModal();\r\n        const successShown = useSuccessModal();\r\n        const route = useRoute();\r\n        return {\r\n            returnCallShown,\r\n            successShown,\r\n            route,\r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            serviceOptionsShown: false,\r\n            branchOptionsShown: false,\r\n            formData: {\r\n                service_id: '',\r\n                city_id: '',\r\n                phone: '',\r\n                full_name: '',\r\n            },\r\n            invalidInputMessages: {\r\n                service_id: '',\r\n                city_id: '',\r\n                phone: '',\r\n                full_name: '',\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        services() {\r\n            return this.rentalContainers\r\n                ? {\r\n                      25: '20DC',\r\n                      26: '20HC PW',\r\n                      27: '40HC',\r\n                      28: '40HC PW',\r\n                  }\r\n                : {\r\n                      14: 'Морские грузоперевозки',\r\n                      15: 'Железнодорожные перевозки',\r\n                      16: 'Автомобильные перевозки',\r\n                      17: 'Авиаперевозки',\r\n                      24: 'Проектная логистика',\r\n                      19: 'Таможенное оформление',\r\n                      20: 'Ответственное хранение',\r\n                      21: 'Экспедирование грузов',\r\n                      18: 'Доставка сборных грузов',\r\n                      22: 'Страхование грузов',\r\n                      23: 'Сертификация продукции',\r\n                  };\r\n        },\r\n        servicesIDs() {\r\n            return Object.keys(this.services);\r\n        },\r\n        serviceChosen() {\r\n            const { $texts } = useNuxtApp();\r\n            return this.formData.service_id\r\n                ? this.services[this.formData.service_id]\r\n                : this.rentalContainers\r\n                ? $texts.containerType\r\n                : $texts.whichService;\r\n        },\r\n        cities() {\r\n            return {\r\n                4: 'Москва',\r\n                2: 'Владивосток',\r\n                5: 'Санкт-Петербург',\r\n                3: 'Новосибирск',\r\n                7: 'Хабаровск',\r\n                8: 'Уссурийск',\r\n                6: 'Находка',\r\n            };\r\n        },\r\n        citiesIDs() {\r\n            // they wanted order\r\n            return [4, 2, 5, 3, 7, 8, 6];\r\n            // return Object.keys(this.cities);\r\n        },\r\n        cityChosen() {\r\n            const { $texts } = useNuxtApp();\r\n            return this.formData.city_id\r\n                ? this.cities[this.formData.city_id]\r\n                : $texts.branch;\r\n        },\r\n    },\r\n    methods: {\r\n        updateField(value, key) {\r\n            this.formData[key] = value;\r\n        },\r\n        handleSubmit() {\r\n            let valid = true;\r\n            for (const [key, value] of Object.entries(this.formData)) {\r\n                const errMessage = validate(value, key);\r\n                if (errMessage) {\r\n                    valid = false;\r\n                    this.invalidInputMessages[key] = errMessage;\r\n                    const unwatch = this.$watch(\r\n                        () => this.formData[key],\r\n                        () => this.clearError(key, unwatch)\r\n                    );\r\n                }\r\n            }\r\n            valid && this.sendData();\r\n        },\r\n        clearError(key, unwatch) {\r\n            this.invalidInputMessages[key] = '';\r\n            unwatch();\r\n        },\r\n        clearData() {\r\n            for (const key in this.formData) {\r\n                this.formData[key] = '';\r\n            }\r\n        },\r\n        async sendData() {\r\n            const { apiBase } = useRuntimeConfig();\r\n            const queryParams = Object.keys(this.route.query).length\r\n                ? this.route.query\r\n                : null;\r\n            const data = { ...this.formData, query_params: queryParams };\r\n            this.successShown = !this.successShown;\r\n            this.returnCallShown = false;\r\n            try {\r\n                if (dataLayer) {\r\n                    dataLayer.push({ event: 'callback' });\r\n                }\r\n                await $fetch(`${apiBase}/api/callback_request/submit`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                    credentials: 'include',\r\n                });\r\n                this.clearData();\r\n            } catch (err) {\r\n                this.clearData();\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style\r\n    src=\"@/assets/scss/components/Shared/ReturnCallModal.scss\"\r\n    lang=\"scss\"\r\n    scoped\r\n></style>\r\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrInterpolate","_ssrRenderClass","_ssrRenderAttr"],"mappings":";;;;;;;;;;;AAEQ,QAAA,OAAUA,eAAAC,WAAA;AAAA,IACV;IACA;IACA,SAAW;AAAA,IACX;;;;;;;;;;;;ACuHR,MAAA,YAAA;AAAA;EAEI,OAAA;AAAA,IACI,OAAA;AAAA;;;IAIA,OAAA;AAAA;;;IAIA,kBAAA;AAAA;;;IAIA,eAAA;AAAA;;;;EAKJ,QAAA;AACI,UAAA,kBAAA;AACA,UAAA,eAAA;AACA,UAAA,QAAA;AACA,WAAA;AAAA,MACI;AAAA;;;;EAKR,OAAA;AACI,WAAA;AAAA;;MAGI,UAAA;AAAA;;QAGI,OAAA;AAAA;;MAGJ,sBAAA;AAAA;;QAGI,OAAA;AAAA;;;;EAKZ,UAAA;AAAA;;QAIkB,IAAA;AAAA;QAEA,IAAA;AAAA;MAEJ;;;;QAKI,IAAA;AAAA;;;;;;;;;;AAWV,aAAA,OAAA,KAAA,KAAA,QAAA;AAAA;IAEJ,gBAAA;;wCAGQ,KAAA,SAAA,KAAA,SAAA,UAAA,IACA,KAAA,mBACA,OAAA,gBACA,OAAA;AAAA;IAER,SAAA;AACI,aAAA;AAAA;QAEI,GAAA;AAAA,QACA,GAAA;AAAA,QACA,GAAA;AAAA;;;;;;AAQJ,aAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA;AAAA;;;qCAMI,KAAA,OAAA,KAAA,SAAA,OAAA,IACA,OAAA;AAAA;;EAGZ,SAAA;AAAA;;;IAII,eAAA;;;AAGQ,cAAA,aAAA,SAAA,OAAA,GAAA;AACA,YAAA,YAAA;;AAEI,eAAA,qBAAA,GAAA,IAAA;;;YAGI,MAAA,KAAA,WAAA,KAAA,OAAA;AAAA;QAER;AAAA,MACJ;;;;AAIA,WAAA,qBAAA,GAAA,IAAA;AACA;;;;AAII,aAAA,SAAA,GAAA,IAAA;AAAA,MACJ;AAAA;IAEJ,MAAA,WAAA;AACI,YAAA,EAAA,YAAA;iEAEI,KAAA,MAAA;;AAGJ,WAAA,eAAA,CAAA,KAAA;;AAEA,UAAA;;AAEQ,oBAAA,KAAA,EAAA,OAAA,WAAA,CAAA;AAAA,QACJ;;;UAGI,SAAA;AAAA,YACI,gBAAA;AAAA;;UAGJ,aAAA;AAAA,QACJ,CAAA;AACA,aAAA,UAAA;AAAA;AAEA,aAAA,UAAA;AAAA,MACJ;AAAA;;AAGZ;;;;;AA3RS,QAAA,OAAAD,eAAAC,WAAA,EAAA,OAAA,iBAAA,MAAA,CAAA,oBAAA;;;;;;;;;;uFASMC,eAAA,KAAA,OAAA,QAAA,sHAMsBC,eAAA,CAAA,EAAA,MAAA,CAAA,MAAA,SAAA,WAAA,GAAA,oBAAA,CAAA,oEAKbC,cAAA,OAAA,UAAA;;AAaO,UAAA,uBAAAF,eAAA,SAAA,SAAA,SAAA,CAAA,QAAA;AAAA;8EAKRA,eAAA,MAAA,qBAAA,UAAA,4EAOcC,eAAA,CAAA,EAAA,MAAA,CAAA,MAAA,SAAA,QAAA,GAAA,oBAAA,CAAA,iEAKbC,cAAA,OAAA,UAAA;;AAaO,UAAA,uBAAAF,eAAA,SAAA,OAAA,MAAA,CAAA,QAAA;AAAA;8EAKRA,eAAA,MAAA,qBAAA,OAAA,sQAYAA,eAAA,MAAA,qBAAA,SAAA;IAOH,OAAA;AAAA;IAEA,cAAA;AAAA,IACA,oBAAA;AAAA;uHAKGA,eAAA,MAAA,qBAAA,KAAA;;IAYG,IAAA;AAAA,IAAW,QAAA;AAAA;;;;;;;;;;;;;;;;IAKX,IAAA;AAAA,IAAiC,QAAA;AAAA;;;;;;;;;;;;;;;;;;;;;"}