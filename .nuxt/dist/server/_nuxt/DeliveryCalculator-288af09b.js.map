{"version":3,"file":"DeliveryCalculator-288af09b.js","sources":["../../../../components/Shared/CalculatorBranchSelect.vue","../../../../assets/icons/info.svg","../../../../components/Shared/CalculatorInput.vue","../../../../components/Shared/CalculatorSecondStep.vue","../../../../components/Shared/DeliveryCalculator.vue"],"sourcesContent":["<template>\r\n    <div\r\n        class=\"calculator__input-container select_container\"\r\n        @click=\"cityOptionsShown = !cityOptionsShown\"\r\n    >\r\n        <div class=\"calculator__select\" :class=\"{ gray: !formData.city_id }\">\r\n            {{ cityChosen }}\r\n            <img\r\n                src=\"@/assets/icons/expand.svg\"\r\n                :class=\"{ rotated: cityOptionsShown }\"\r\n                alt=\"\"\r\n            />\r\n            <Transition>\r\n                <ul v-if=\"cityOptionsShown\" class=\"calculator__options\">\r\n                    <li\r\n                        v-for=\"(cityID, key) in citiesIDs\"\r\n                        :key=\"key\"\r\n                        @click=\"updateField(cityID, 'city_id')\"\r\n                    >\r\n                        {{ cities[cityID] }}\r\n                    </li>\r\n                </ul>\r\n            </Transition>\r\n        </div>\r\n        <label class=\"calculator__input-label\">Филиал</label>\r\n        <div\r\n            v-if=\"invalidInputMessages.city_id\"\r\n            class=\"calculator__error-message\"\r\n        >\r\n            {{ invalidInputMessages.city_id }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { vMaska } from 'maska';\r\nexport default {\r\n    directives: { maska: vMaska },\r\n    props: {\r\n        formData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        invalidInputMessages: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n    },\r\n    emits: ['fieldUpd'],\r\n    data() {\r\n        return {\r\n            cityOptionsShown: false,\r\n        };\r\n    },\r\n    computed: {\r\n        cities() {\r\n            return {\r\n                2: 'Владивосток',\r\n                3: 'Новосибирск',\r\n                4: 'Москва',\r\n                5: 'Санкт-Петербург',\r\n                6: 'Находка',\r\n                7: 'Хабаровск',\r\n                8: 'Уссурийск',\r\n            };\r\n        },\r\n        citiesIDs() {\r\n            return Object.keys(this.cities);\r\n        },\r\n        cityChosen() {\r\n            const { $texts } = useNuxtApp();\r\n            return this.formData.city_id\r\n                ? this.cities[this.formData.city_id]\r\n                : $texts.chooseClosestBranch;\r\n        },\r\n    },\r\n    methods: {\r\n        updateField(value) {\r\n            this.$emit('fieldUpd', value);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style\r\n    src=\"@/assets/scss/components/Shared/DeliveryCalculator.scss\"\r\n    lang=\"scss\"\r\n    scoped\r\n></style>\r\n","export default \"__VITE_ASSET__98ffb9cc__\"","<template>\r\n    <div class=\"calculator__input-container\">\r\n        <img\r\n            v-if=\"inputName === 'description'\"\r\n            src=\"@/assets/icons/info.svg\"\r\n            class=\"calculator__info_icon\"\r\n            :alt=\"$texts.additionalInfo\"\r\n        />\r\n        <div\r\n            v-if=\"inputName === 'description'\"\r\n            class=\"calculator__description-message\"\r\n        >\r\n            {{ $texts.descriptionInputMessage }}\r\n        </div>\r\n\r\n        <!-- maska attrs cant be v-binded -->\r\n        <input\r\n            v-if=\"inputName === 'phone'\"\r\n            v-maska\r\n            data-maska=\"+# ### ###-##-##\"\r\n            class=\"calculator__input\"\r\n            :placeholder=\"$texts[inputName]\"\r\n            :value=\"formData[inputName]\"\r\n            @input=\"updateField\"\r\n            @click=\"setNumberToDefault\"\r\n        />\r\n        <input\r\n            v-else\r\n            :type=\"inputName === 'email' ? 'email' : 'text'\"\r\n            class=\"calculator__input\"\r\n            :placeholder=\"$texts[inputName]\"\r\n            :value=\"formData[inputName]\"\r\n            @input=\"updateField\"\r\n        />\r\n        <label class=\"calculator__input-label\">{{ $texts[inputName] }}</label>\r\n        <div\r\n            v-if=\"invalidInputMessages[inputName]\"\r\n            class=\"calculator__error-message\"\r\n        >\r\n            {{ invalidInputMessages[inputName] }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { vMaska } from 'maska';\r\nexport default {\r\n    directives: { maska: vMaska },\r\n    props: {\r\n        formData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        invalidInputMessages: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        inputName: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    emits: ['fieldUpd'],\r\n    methods: {\r\n        updateField(e) {\r\n            const value = e.target.value;\r\n            this.$emit('fieldUpd', value);\r\n        },\r\n        setNumberToDefault() {\r\n            if (!this.formData.phone) {\r\n                this.$emit('fieldUpd', '+7');\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style\r\n    src=\"@/assets/scss/components/Shared/DeliveryCalculator.scss\"\r\n    lang=\"scss\"\r\n    scoped\r\n></style>\r\n","<!-- eslint-disable vue/no-v-html -->\r\n<template>\r\n    <div class=\"calculator__body\">\r\n        <div class=\"calculator__second-desktop-layout-container\">\r\n            <SharedCalculatorBranchSelect\r\n                :form-data=\"formData\"\r\n                :invalid-input-messages=\"invalidInputMessages\"\r\n                @field-upd=\"(value) => $emit('fieldUpd', value, 'city_id')\"\r\n            />\r\n            <SharedCalculatorInput\r\n                class=\"shrink\"\r\n                :form-data=\"formData\"\r\n                :invalid-input-messages=\"invalidInputMessages\"\r\n                input-name=\"phone\"\r\n                @field-upd=\"(value) => $emit('fieldUpd', value, 'phone')\"\r\n            />\r\n\r\n            <div class=\"calculator__email-container\">\r\n                <SharedCalculatorInput\r\n                    class=\"shrink\"\r\n                    :form-data=\"formData\"\r\n                    :invalid-input-messages=\"invalidInputMessages\"\r\n                    input-name=\"email\"\r\n                    @field-upd=\"(value) => $emit('fieldUpd', value, 'email')\"\r\n                />\r\n                <p class=\"calculator__email-note\">\r\n                    {{ $texts.calculatorEmailNote }}\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div class=\"calculator__bottom\">\r\n            <!-- <button\r\n                class=\"calculator__button calculator__button_white\"\r\n                @click=\"goFirstStep\"\r\n            >\r\n                <span class=\"calculator__arrow-left\"> {{ $texts.back }} </span>\r\n            </button> -->\r\n            <div class=\"calculator__send-container\">\r\n                <button\r\n                    class=\"calculator__button animate-red\"\r\n                    @click=\"handleSubmit\"\r\n                >\r\n                    {{ $texts.send }}\r\n                </button>\r\n                <div class=\"calculator__confidentiality\">\r\n                    Нажимая кнопку <span>«Отправить»</span>, Вы принимаете\r\n                    условия\r\n                    <NuxtLink to=\"/eula\" target=\"_blank\"\r\n                        >пользовательского соглашения </NuxtLink\r\n                    >и\r\n                    <NuxtLink to=\"/politika-konfidencialnosti\" target=\"_blank\"\r\n                        >политики конфиденциальности</NuxtLink\r\n                    >\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { vMaska } from 'maska';\r\nexport default {\r\n    directives: { maska: vMaska },\r\n    props: {\r\n        handleSubmit: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        formData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        invalidInputMessages: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n    },\r\n    emits: ['fieldUpd'],\r\n};\r\n</script>\r\n\r\n<style\r\n    lang=\"scss\"\r\n    src=\"@/assets/scss/components/Shared/DeliveryCalculator.scss\"\r\n    scoped\r\n></style>\r\n","<template>\r\n    <div id=\"calculator\" class=\"calculator\">\r\n        <h2 class=\"calculator__title\">{{ $texts.calculateTitle }}</h2>\r\n        <p class=\"calculator__subtitle\">{{ $texts.legalEntitiesOnly }}</p>\r\n        <!-- <div class=\"calculator__steps\">\r\n            <div\r\n                class=\"calculator__step _first-step\"\r\n                :class=\"{\r\n                    calculator__step_active: isFirstStep,\r\n                    calculator__step_text_red: isSecondStep,\r\n                }\"\r\n            >\r\n                <img\r\n                    src=\"@/assets/icons/location.svg\"\r\n                    :class=\"{ calculator__step_red: isSecondStep }\"\r\n                    alt=\"\"\r\n                />\r\n                {{ $texts.step1 }}\r\n            </div>\r\n            <div\r\n                class=\"calculator__step\"\r\n                :class=\"{ calculator__step_active: isSecondStep }\"\r\n            >\r\n                <IconsWriteLetter\r\n                    :class=\"{ calculator__step_white: isSecondStep }\"\r\n                />\r\n                {{ $texts.step2 }}\r\n            </div>\r\n        </div> -->\r\n        <!-- <SharedCalculatorFirstStep\r\n            v-if=\"firstStep\"\r\n            :handle-submit=\"handleSubmit\"\r\n            :form-data=\"formData\"\r\n            :invalid-input-messages=\"invalidInputMessages\"\r\n            @field-upd=\"updateField\"\r\n        /> -->\r\n        <SharedCalculatorSecondStep\r\n            :handle-submit=\"handleSubmit\"\r\n            :form-data=\"formData\"\r\n            :invalid-input-messages=\"invalidInputMessages\"\r\n            @field-upd=\"updateField\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport validate from '~~/helpers/validate';\r\n\r\nexport default {\r\n    setup() {\r\n        const calculatorPopupShown = useCalculatorPopup();\r\n        const successShown = useSuccessModal();\r\n        const route = useRoute();\r\n        return {\r\n            calculatorPopupShown,\r\n            successShown,\r\n            route,\r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            firstStep: false,\r\n            formData: {\r\n                city_id: '',\r\n                // from: '',\r\n                // to: '',\r\n                // description: '',\r\n                phone: '',\r\n                email: '',\r\n            },\r\n            invalidInputMessages: {\r\n                city_id: '',\r\n                // to: '',\r\n                // from: '',\r\n                // description: '',\r\n                phone: '',\r\n                email: '',\r\n            },\r\n            unwatchers: {\r\n                // to: null,\r\n                // from: null,\r\n                // description: null,\r\n                phone: null,\r\n                email: null,\r\n            },\r\n        };\r\n    },\r\n    // computed: {\r\n    //     isFirstStep() {\r\n    //         return this.firstStep;\r\n    //     },\r\n    //     isSecondStep() {\r\n    //         return !this.firstStep;\r\n    //     },\r\n    // },\r\n    methods: {\r\n        clearError(key, unwatch) {\r\n            this.invalidInputMessages[key] = '';\r\n            unwatch();\r\n        },\r\n        // goFirstStep() {\r\n        //     this.firstStep = true;\r\n        // },\r\n        // goSecondStep() {\r\n        //     this.firstStep = false;\r\n        // },\r\n        updateField(value, key) {\r\n            this.formData[key] = value;\r\n        },\r\n        handleSubmit() {\r\n            let valid = true;\r\n            for (const [key, value] of Object.entries(this.formData)) {\r\n                // if (\r\n                //     (this.isFirstStep &&\r\n                //         ['phone', 'email', 'city_id'].includes(key)) ||\r\n                //     (this.isSecondStep &&\r\n                //         !['phone', 'email', 'city_id'].includes(key))\r\n                // ) {\r\n                //     continue;\r\n                // }\r\n                const errMessage = validate(value, key);\r\n                if (errMessage) {\r\n                    this.invalidInputMessages[key] = errMessage;\r\n                    valid = false;\r\n                    // watch changes only until the error is cleared\r\n                    const unwatch = this.$watch(\r\n                        () => this.formData[key],\r\n                        () => this.clearError(key, unwatch)\r\n                    );\r\n                }\r\n            }\r\n            if (!valid) return;\r\n            this.isFirstStep ? this.goSecondStep() : this.sendData();\r\n        },\r\n        async sendData() {\r\n            const { apiBase } = useRuntimeConfig();\r\n            this.successShown = !this.successShown;\r\n            this.calculatorPopupShown = false;\r\n            const queryParams = Object.keys(this.route.query).length\r\n                ? this.route.query\r\n                : null;\r\n            const data = { ...this.formData, query_params: queryParams };\r\n            try {\r\n                if (dataLayer) {\r\n                    dataLayer.push({ event: 'calc_delivery' });\r\n                }\r\n                await $fetch(`${apiBase}/api/calculation_request/submit`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                    credentials: 'include',\r\n                });\r\n                this.clearData();\r\n            } catch (err) {\r\n                this.clearData();\r\n            }\r\n        },\r\n        clearData() {\r\n            for (const key in this.formData) {\r\n                this.formData[key] = '';\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style\r\n    lang=\"scss\"\r\n    src=\"@/assets/scss/components/Shared/DeliveryCalculator.scss\"\r\n    scoped\r\n></style>\r\n"],"names":["_sfc_main","_ssrRenderAttrs","_mergeProps","_ssrRenderClass","_ssrRenderAttr","_imports_0","_ssrInterpolate"],"mappings":"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"}